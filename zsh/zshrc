# ---------------- #
# General settings #
# ---------------- #

# Enable completion
autoload -Uz compinit && compinit

# Enable history
HISTFILE=~/.local/state/zsh_history
HISTSIZE=1000
SAVEHIST=1000
setopt extended_history
setopt hist_ignore_all_dups
setopt hist_reduce_blanks
setopt inc_append_history_time

# Use vim keybinds
export KEYTIMEOUT=1
bindkey -v

# Update prompt (which shows the keymap) when keymap changes.
function zle-keymap-select {
  zle reset-prompt
}

zle -N zle-keymap-select

# Add "text objects" by creating keymaps which get called in operator pending mode.
autoload -Uz select-bracketed select-quoted
zle -N select-quoted
zle -N select-bracketed

for km in viopp visual; do
  bindkey -M $km -- '-' vi-up-line-or-history
  for c in {a,i}${(s..)^:-\'\"\`\|,./:;=+@}; do
    bindkey -M $km $c select-quoted
  done
  for c in {a,i}${(s..)^:-'()[]{}<>bB'}; do
    bindkey -M $km $c select-bracketed
  done
done

# Prompt
setopt prompt_subst
source {{@@ _dotdrop_dotpath @@}}/zsh/prompt.zsh-theme

# --------------- #
# FZF Integration #
# --------------- #

# Fuzzy find a path and add it at the cursor.
fzf-path-widget() {
  local paths=""

  fzf-tmux --reverse --walker=file,dir --scheme=path --multi < /dev/tty | \
    while read -r item; do paths="${paths}${(q)item} " ; done

  local ret=$?
  LBUFFER="${LBUFFER}${paths}"
  zle reset-prompt
  return $ret
}

zle     -N           fzf-path-widget
bindkey -M main '^T' fzf-path-widget

# Fuzzy find in history, replace current prompt
fzf-history-widget() {
  local cmd=$(fc -rlnDt '%s' 1 | awk '{
    ts = int($1)
    delta = systime() - ts
    delta_days = int(delta / 86400)
    if (delta < 0) { $1="+" (-delta_days) "d" }
    else if (delta_days < 1 && delta < 72000) { $1=strftime("%H:%M", ts) }
    else if (delta_days == 0) { $1="1d" }
    else { $1=delta_days "d" }
    $2="(" $2 ")"
    print $0
  }' | fzf-tmux --reverse --scheme=history --nth='1,3..' --accept-nth='3..')
  local ret=$?

  if [[ $ret -eq 0 && -n $cmd ]] ; then BUFFER="$cmd" ; fi
  zle reset-prompt
  return $ret
}

zle     -N           fzf-history-widget
bindkey -M main '^R' fzf-history-widget

# ------- #
# Plugins #
# ------- #

source {{@@ _dotdrop_dotpath @@}}/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source {{@@ _dotdrop_dotpath @@}}/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh

# ----------- #
# Environment #
# ----------- #

export EDITOR={{@@ editor @@}}
export VISUAL={{@@ visual @@}}

{%@@ if path @@%}
export PATH={{@@ path @@}}:$PATH
{%@@ endif @@%}
{%@@ if manpath @@%}
export MANPATH={{@@ manpath @@}}:$MANPATH
{%@@ endif @@%}
{%@@ if infopath @@%}
export INFOPATH={{@@ infopath @@}}:$INFOPATH
{%@@ endif @@%}

# ------------------------- #
# Aliases & Custom Commands #
# ------------------------- #

# Make it easier to invoke dotdrop
alias dotdrop='dotdrop --cfg={{@@ _dotdrop_dotpath @@}}/config.yaml'

# Use colors when possible
{%@@ if os == "darwin" @@%}
alias ls="ls -G"
{%@@ elif os == "linux" @@%}
alias ls="ls --color=auto"
alias grep="grep --color=auto"
{%@@ endif @@%}

{%@@ if userctl @@%}alias userctl="systemctl --user"{%@@ endif @@%}

{%@@ if ssh @@%}
function smux {
  # We set this up through ssh config now, keep this function around for
  # muscle memory.
  ssh smux_${1}
}
{%@@ endif @@%}

{%@@ if unlock @@%}
{%@@ for item in unlock @@%}
function unlock-{{@@ item @@}} {
{{@@ unlock[item].body @@}}
}

{%@@ endfor @@%}
{%@@ endif @@%}

{%@@ if mail @@%}
function mutt {
  neomutt -f ~/.local/mail/$1/Inbox
}
{%@@ for account in mail @@%}
alias mutt{{@@ account[:1] @@}}="mutt {{@@ account @@}}"
{%@@ endfor @@%}
{%@@ endif @@%}
